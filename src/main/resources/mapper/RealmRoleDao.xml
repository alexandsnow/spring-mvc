<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alex.realm.persist.dao.RealmRoleDao" >
  <resultMap id="BaseResultMap" type="com.alex.realm.persist.entity.RealmRoleEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
    <result column="role_creator_id" property="roleCreatorId" jdbcType="INTEGER" />
    <result column="data_create_time" property="dataCreateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_name, role_desc, role_creator_id, data_create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryKeyBatch" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from role
    where id in
    <foreach collection ="list" item="item" index="index" separator="," open="(" close=")">
      #{item}
    </foreach>
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.alex.realm.persist.entity.RealmRoleEntity" >
    insert into role (id, role_name, role_desc, 
      role_creator_id, data_create_time)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{roleCreatorId,jdbcType=INTEGER}, #{dataCreateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.alex.realm.persist.entity.RealmRoleEntity" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleDesc != null" >
        role_desc,
      </if>
      <if test="roleCreatorId != null" >
        role_creator_id,
      </if>
      <if test="dataCreateTime != null" >
        data_create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleCreatorId != null" >
        #{roleCreatorId,jdbcType=INTEGER},
      </if>
      <if test="dataCreateTime != null" >
        #{dataCreateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.alex.realm.persist.entity.RealmRoleEntity" >
    update role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleCreatorId != null" >
        role_creator_id = #{roleCreatorId,jdbcType=INTEGER},
      </if>
      <if test="dataCreateTime != null" >
        data_create_time = #{dataCreateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alex.realm.persist.entity.RealmRoleEntity" >
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      role_creator_id = #{roleCreatorId,jdbcType=INTEGER},
      data_create_time = #{dataCreateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>